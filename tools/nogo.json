{
  "assign": {
    "exclude_files": {
      "/external/bazel_gazelle/walk/walk.go": "allowed: false positive"
    }
  },
  "checkunsafe": {
    "exclude_files": {
      "/external/": "allowed: not subject to unsafe naming rules"
    }
  },
  "nilness": {
    "exclude_files": {
      "/com_github_vishvananda_netlink/route_linux.go": "allowed: false positive",
      "/external/bazel_gazelle/cmd/gazelle/.*": "allowed: false positive",
      "/org_golang_x_tools/go/packages/golist.go": "allowed: runtime internals",
      "/pkg/sentry/platform/kvm/kvm_test.go": "allowed: intentional",
      "/tools/bigquery/bigquery.go": "allowed: false positive",
      "/external/io_opencensus_go/tag/map_codec.go": "allowed: false positive"
    }
  },
  "structtag": {
    "exclude_files": {
      "/external/": "allowed: may use arbitrary tags"
    }
  },
  "unsafeptr": {
    "exclude_files": {
      ".*_test.go": "allowed: exclude tests",
      "/pkg/flipcall/flipcall_unsafe.go": "allowed: special case",
      "/pkg/gohacks/gohacks_unsafe.go": "allowed: special case",
      "/pkg/sentry/fs/fsutil/host_file_mapper_unsafe.go": "allowed: special case",
      "/pkg/sentry/platform/kvm/(bluepill|machine)_unsafe.go": "allowed: special case",
      "/pkg/sentry/platform/ring0/pagetables/allocator_unsafe.go": "allowed: special case",
      "/pkg/sentry/platform/safecopy/safecopy_unsafe.go": "allowed: special case",
      "/pkg/sentry/vfs/mount_unsafe.go": "allowed: special case"
    }
  }
}
